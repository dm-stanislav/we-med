"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[842],{253:function(e,t,o){o.r(t),o.d(t,{default:function(){return m}});var l=o(796),r=[{elementType:"geometry",stylers:[{color:"#f5f5f5"}]},{elementType:"labels.icon",stylers:[{visibility:"off"}]},{elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{elementType:"labels.text.stroke",stylers:[{color:"#f5f5f5"}]},{featureType:"administrative.land_parcel",elementType:"labels.text.fill",stylers:[{color:"#bdbdbd"}]},{featureType:"landscape",elementType:"geometry.fill",stylers:[{color:"#fafdfe"}]},{featureType:"landscape.natural",elementType:"geometry.fill",stylers:[{color:"#c7e8d3"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"poi.park",elementType:"geometry.fill",stylers:[{color:"#c7e8d3"}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#ffffff"}]},{featureType:"road",elementType:"geometry.stroke",stylers:[{color:"#e7ebee"},{weight:1.5}]},{featureType:"road.arterial",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#dadada"}]},{featureType:"road.highway",elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{featureType:"road.local",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"transit.line",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"transit.station",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#c9c9c9"}]},{featureType:"water",elementType:"geometry.fill",stylers:[{color:"#e7eaeb"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]}],s=o(692),a=o(594);const n={path:"M24.5096 24.9299C25.6446 24.9299 26.6166 24.4805 27.4256 23.5817C28.2345 22.6828 28.6383 21.6036 28.6369 20.3439C28.6369 19.0828 28.2325 18.0028 27.4235 17.1039C26.6145 16.2051 25.6432 15.7564 24.5096 15.758C23.3745 15.758 22.4025 16.2074 21.5936 17.1062C20.7846 18.0051 20.3808 19.0843 20.3822 20.3439C20.3822 21.6051 20.7866 22.6851 21.5956 23.5839C22.4046 24.4828 23.3759 24.9315 24.5096 24.9299ZM24.5096 47C24.2344 47 23.9592 46.9427 23.6841 46.828C23.4089 46.7134 23.1682 46.5605 22.9618 46.3694C17.9401 41.4395 14.1911 36.8627 11.7146 32.639C9.23822 28.4153 8 24.4698 8 20.8025C8 15.0701 9.6599 10.5032 12.9797 7.10191C16.2995 3.70064 20.1428 2 24.5096 2C28.8777 2 32.7217 3.70064 36.0415 7.10191C39.3613 10.5032 41.0205 15.0701 41.0191 20.8025C41.0191 24.4713 39.7809 28.4176 37.3045 32.6413C34.828 36.865 31.079 41.441 26.0573 46.3694C25.851 46.5605 25.6102 46.7134 25.335 46.828C25.0599 46.9427 24.7847 47 24.5096 47Z",fillColor:"#ba7f5b",fillOpacity:1,strokeOpacity:0},i=".map",c={address:null,center:{lat:50.4501,lng:30.5234},disableDefaultUI:!0,maxZoom:20,zoom:15,zoomControl:!0},p={address:"(object|array)",center:"object",disableDefaultUI:"boolean",maxZoom:"number",zoom:"number",zoomControl:"boolean"};class y extends s.Z{constructor(e,t,o){super(e,t),this._geocoder=o,this._map=null,this._markers=[];try{this._initMap()}catch(e){console.error(e.message)}}static get NAME(){return"map"}static get Default(){return c}static get DefaultType(){return p}_initMap(){this._initialized||(this._initialized=!0,this._map=new google.maps.Map(this._element,{center:this._config.center,zoom:this._config.zoom,maxZoom:this._config.maxZoom,disableDefaultUI:this._config.disableDefaultUI,zoomControl:this._config.zoomControl,styles:r}),this._generateMap())}_generateMap(){const e=new google.maps.LatLngBounds,t=()=>{this._map.fitBounds(e),this._config.address.length>1&&this._map.panToBounds(e),this._map.getZoom()>this._config.zoom&&this._map.setZoom(this._config.zoom)};for(let o=0;o<this._config.address.length;o++){const l=this._config.address[o];this._geocoder.geocode({address:l},((t,o)=>{if("OK"!==o)return void console.error(o);const l=t[0].geometry.location.lat(),r=t[0].geometry.location.lng(),s=n?{...n,size:new google.maps.Size(50,50),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(25,50)}:null;this._markers.push(new google.maps.Marker({map:this._map,position:{lat:l,lng:r},icon:s})),e.extend(new google.maps.LatLng(l,r))})).then((()=>{o===this._config.address.length-1&&t()}))}}_configAfterMerge(e){return e.address=Array.isArray(e.address)?e.address:[e.address],e}}(()=>{const e=l.Z.findOne(i);let t=!1;if(!e||t)return;const o=document.createElement("script");o.async=!0,o.defer=!0;const r=a.Z.getDataAttribute(document.body,"map-api");if(r){const e=()=>{l.Z.find(i).sort(((e,t)=>window.scrollY+e.getBoundingClientRect().top-(window.scrollY+t.getBoundingClientRect().top)))[0].getBoundingClientRect().top<window.innerHeight+100&&(o.src=`https://maps.googleapis.com/maps/api/js?key=${r}&callback=initMap`,document.body.append(o),t=!0,window.removeEventListener("scroll",e))};e(),window.addEventListener("scroll",e)}})(),window.initMap=()=>{const e=new google.maps.Geocoder;for(const t of l.Z.find(i))new y(t,null,e)};var m=y}}]);